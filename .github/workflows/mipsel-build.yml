name: Build tinyproxy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # 添加 workflow_dispatch 事件
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ mipsle, mipsle-softfloat ]
    steps:
    - uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all

    - name: Set up build environment for ${{ matrix.arch }}
      if: matrix.arch == 'mipsle'
      run: |
        sudo dpkg --add-architecture mipsle
        sudo apt update
        sudo apt install -y crossbuild-essential-mipsle qemu-user-static
    - name: Set up build environment for ${{ matrix.arch }}
      if: matrix.arch == 'mipsle-softfloat'
      run: |
        sudo dpkg --add-architecture mipsle
        sudo apt update
        sudo apt install -y crossbuild-essential-mipsle qemu-user-static

    - name: Configure for ${{ matrix.arch }}
      run: |
        CC=mipsle-linux-gnu-gcc ./configure --host=mipsle-linux-gnu --target=mipsle-linux-gnu AR=mipsle-linux-gnu-ar RANLIB=mipsle-linux-gnu-ranlib --prefix=/usr --sysconfdir=/etc --localstatedir=/var
      if: matrix.arch == 'mipsle'
    - name: Configure for ${{ matrix.arch }}
      run: |
        CC=mipsle-linux-gnu-gcc -msoft-float ./configure --host=mipsle-linux-gnu --target=mipsle-linux-gnu AR=mipsle-linux-gnu-ar RANLIB=mipsle-linux-gnu-ranlib --prefix=/usr --sysconfdir=/etc --localstatedir=/var
      if: matrix.arch == 'mipsle-softfloat'

    - name: Build
      run: make

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: tinyproxy-${{ matrix.arch }}
        path: tinyproxy
